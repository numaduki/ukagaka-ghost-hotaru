/*
	単語
*/


// # -----------------------------------------------------------------
// # 単語

//辞書内で未使用のものを含む（各種毒電波で使用される可能性がある）

// 人
ms {
	VoiceActor
}
VoiceActor {
	VoiceActor1a
	VoiceActor1b
	VoiceActor2
}
VoiceActor1 { //ベテラン
	VoiceActor1a; VoiceActor1b
}
VoiceActor1a {
	'岩男潤子'
	'丹下桜'
	'三石琴乃'
	'林原めぐみ'
	'こおろぎさとみ'
	'宮村優子'
	'横山智佐'
}
VoiceActor1b {
	'榎本温子'
	'川澄綾子'
	'緒方恵美'
	'國府田マリ子'
	'飯塚雅弓'
	'高山みなみ'
	'椎名へきる'
}
VoiceActor2 { //中堅
	'坂本真綾'
	'三重野瞳'
	'山本麻里安'
	'桃井はるこ'
	'堀江由衣'
	'野川さくら'
	'水樹奈々'
	'釘宮理恵'
}

Character {
	'伊吹マヤ'
	'惣流アスカラングレー'
	'綾波レイ'
	'真希波マリ'
	'葛城ミサト'
	'成瀬川なる'
	'ナースウィッチ小麦ちゃん'
	'木之本さくら'
	'知世ちゃん'
	'相生祐子'
	'泉こなた'
	'柊かがみ'
	'涼宮ハルヒ'
	'朝比奈みくる'
	'長門有希'
	'高坂桐乃'
	'暁美ほむら'
	'鹿目まどか'
	'平沢唯'
	'秋山澪'
	'あずにゃん'
	'千反田える'
	'キズナアイ'
	'夢見りあむ'
}

// 無機物
mz {
	Sundries
	AnimationFilm
}
	Sundries
	{
		OshareAccessories
		MoeFactor
		Danger
		'練り歯磨き粉'
		'宝くじ'
		'泡で固めるスプレー'
		'安全ピン'
		'MOディスク'
		'まとまる消しゴム'
		'消毒用エタノール'
		'3色ボールペン'
		'単2電池'
		'セメダイン'
		'スクール水着'
		'青い弾丸'
		'漢方胃腸薬'
		'ハイヒール'
		'ラーメンフォーク'
		'キックボード'
		'トイレットペーパー'
		'ボール式マウス'
		'ピンク色のビニールテープ'
		'タオル'
		'ビーチサンダル'
		'ワイングラス'
		'ラップフィルム'
		'三角定規'
		'男もののワイシャツ'
		'マスキングテープ'
	}
	OshareAccessories {
		'チョーカー'
		'ネックレス'
		'イヤリング'
		'指輪'
		'ブレスレット'
	}
	MoeFactor {
		'ニーソックス'
		'ストッキング'
		'ガーターベルト'
		'ショートパンツ'
	}
	Danger {
		{
			'かなづち'
			'ダイナマイト'
			'裁ちばさみ'
			'ドリル'
			'日本刀'
		}
		{
			'のこぎり'
			'バールのようなもの'
			'バタフライナイフ'
			'包丁'
			'モンキーレンチ'
		}
	}
	AnimationFilm
	{
		RecentAnimation
		PastAnimation
	}
	RecentAnimation
	{
		//anime
		// 2022
		'東京ミュウミュウ'
		'ダンまち'
		'ラブライブ'
	}
	PastAnimation
	{
		'エウレカセヴン'
		'エヴァンゲリオン'
		'ローゼンメイデン'
		'円盤皇女ワるきゅーレ'
		'ラブひな'
		'らきすた'
		'彼氏彼女の事情'
		'魔法先生ネギま！'
		'輪るピングドラム'
		'ガンダムSEED'
		'弱虫ペダル'
		'氷菓'
		'響け！ユーフォニアム'
		'グリッドマン'
		//2020 autumn
		'放課後ていぼう日誌'
		'Re:ゼロ'
		'宇崎ちゃん'
		//2020 winter
		'五等分の花嫁'
		'転スラ'
		'はたらく細胞'
		'ゆるキャン△'
		//2021 spring
		'長瀞さん'
		'スーパーカブ'
		//2021 summer
		'メイドラゴン'
	}

// 集合
ml {
	{
		'宮下草薙'
		'四千頭身'
		'東京ホテイソン'
		'藤崎マーケット'
		'髭男爵'
	}
	{
		'DA PUMP'
		'SEKAI NO OWARI'
		'ゲスの極み乙女'
		'ポケットビスケッツ'
		'ブラックビスケッツ'
	}
	BeautyGroup
}
BeautyGroup {
	'宝塚歌劇団'
	'女子十二楽坊'
	'モーニング娘。'
	'ももクロ'
	'AKB'
}

// 社名
mc {
	'アスキーメディアワークス'
	'アップル'
	'スクウェアエニックス'
	'損保ジャパン日本興亜ホールディングス'
	'鳥貴族'
	'パナソニック'
	'バンダイナムコ'
	'非破壊検査'
	'マイクロソフト'
	'メルカリ'
}

// 店名
mh {
	'エディオン'
	'ビックカメラ'
	'ヨドバシカメラ'
	Convenience
	MoeStore
	Restaurant
}
	Convenience {
		'セブンイレブン'
		'ファミリーマート'
		'ミニストップ'
		'ローソン'
	}
	MoeStore {
		'とらのあな'
		'メロンブックス'
	}
	Restaurant {
		'ケンタッキー'
		'天下一品'
		'マクドナルド'
		'ミスド'
		'モスバーガー'
		'山田うどん'
	}


// 技
mt {
	'足踏切前方伸身宙返り'
	'かめはめ波'
	'コブラツイスト'
	'シャイニングフィンガー'
	'ジャーマンスープレックス'
	'セクシービーム'
	'タイガーショット'
	'ダブルラリアット'
	'ツインバルカン'
	'ネコミミモード'
	'フィンファンネル'
}

// 食べ物
me {
	{
		'カスタードケーキ'
		'コーヒーゼリー'
		'チョコチップクッキー'
		'フルーツパフェ'
	}
	{
		'ストロベリーシェイク'
		'ノンアルコールビール'
		'ポカリスエット'
		'マンゴージュース'
		'ライフガード'
	}
	FastFood
}

FastFood {
	'佐世保バーガー'
	'てりやきバーガー'
	'ダブルチーズバーガー'
	'チキンフィレオ'
	'ハンバーガー'
	'モスバーガー'
}

// 地名
mp {
	NearPlace
	FarPlace
}
NearPlace {
	'新宿'
	'世田谷'
	'日暮里'
	'練馬'
	'原宿'
	'目黒'
	'六本木'
}
FarPlace {
	'アルゼンチン'
	'オーストラリア'
	'コートジボワール'
	'スリランカ'
	'ノルウェー'
	'ポルトガル'
	'メキシコ'
}

//「〜に〜する〜」
dms {
	"愛のあまり%(ms)に%(mt)をくらわせる%(ms)の追っかけ"
	"%(BeautyGroup)の新メンバーオーディションに応募したらしい%(ms)"
}

OtakuHobby {
	'アニメ'
	'ガンプラ'
	'同人誌'
	'フィギュアのカスタマイズ'
}

StrangeActionOfHuman {
	'赤黒い胞子を撒き散らす'
	'分裂して殖える'
	'パッドを入れて胸の大きさをごまかす'
	"%(Character)の抱き枕を%(RANDODD(10))万円で落札する"
	'生きて腸まで届く'
	'引っこ抜かれて連れて行かれて最期には食べられる'
	'大麻を栽培して精製してガイジンに売りさばく'
	'ゲーセンで1万円分連コインする'
}

StrangeActionOfNotHuman {
	'自分でコーヒーをいれて飲む'
	'勝手にエアコンをつける'
	'自分探しの旅に出たいとせがむ'
	'留守の間に蛇口を全開にする'
}

ColorAdj {
	'赤い'
	'青い'
	'白い'
	'黒い'
	'ピンク色の'
	'緑色の'
	'灰色い'
	'オレンジ色の'
	'生成り色の'
}

ITBusiness {
	'楽天'
	'ライブドア'
	'ソフトバンク'
}

Trivia {
	_w = '\_w[1000]\n'

	"トマトが食用になったのは%(_w)飢饉の際に仕方なく食べられたのがきっかけ"
	"月の裏側では%(_w)対地球用ミサイルが作られている"
	"ソニーの製品には%(_w)実際にソニータイマーは付いていない"
	"鎖にトゲ付き鉄球を繋いだ武器が%(_w)最近飛ぶように売れている"
	"地球の公転は%(_w)だんだん速くなっている"
	"ドラえもんは%(_w)決して西暦3000年以降には連れて行ってくれない"
	"清水寺の有名な3本の水は、%(_w)土葬地帯を経由して流れてくる"
	"清水の舞台からは%(_w)年間数人が飛び降りて死者が出るが、恒例なので報道されない"
	"イルカは%(_w)左脳と右脳を交互に眠らせる"
	"軽自動車は%(_w)ハイオクガソリンを入れると爆発する"
	"ソニータイマーにも%(_w)ソニータイマーはついている"
	"ミニ四駆のモーターは%(_w)核兵器開発に用いられる"
	"矢追純一は%(_w)宇宙人である"
	"ゼンマイ式の%(VoiceActor)は%(_w)ねじを巻き過ぎるとしばらく1.5倍速になる"
	"無印良品は%(_w)バイブレーターの販売を企画していた"
	"幼い少女を1時間部屋に連れ込むと%(_w)監禁罪に問われる"
	"桜の木の下にはだいたい%(_w)%(ms)が埋まっている"
	"サバを食べ続けた%(VoiceActor)は%(_w)青くなる"
	"海賊版のDVDを偽10000円札で買うと%(_w)逮捕される"
}

RadioProgram {
	mh+'店内ラジオ'; 'ラジオ奥多摩'; '青木ヶ原FM'
	--
	'\w6『'
	--
	VoiceActor+'主義（イズム）'
	{
		VoiceActor+'の'; Character+'の'
		--
		'チョベリグ'; 'おけまる'; 'つよつよ'; 'ワクテカ'
		--
		GetWeekDayJ+'曜日'; '大放送'; 'モーニング'; 'サンデー'
	}
	--
	'』'
}


// # -----------------------------------------------------------------
// # 時間帯で変化させる文字列


GetWeekDayJ
{
	('日','月','火','水','木','金','土')[GETTIME[3]]
}

GetWeekDayE
{
	('Sun','Mon','Tue','Wed','Thu','Fri','Sat')[GETTIME[3]]
}

//今日が節分かどうかを返す
//2021〜2057年は4で割った余りが1なら2日
//2055〜2090年は4で割った余りが1か2なら2日
//2090年以降はおそらく人類は滅亡しており節分はない
IsSetsubun {
	_y = GETTIME[0]
	_m = GETTIME[1]
	_d = GETTIME[2]
	if _m != 2 {
		0
	} elseif 2021 <= _y && _y <= 2057 {
		_d == (3, 2, 3, 3)[_y % 4]
	} elseif 2055 <= _y && _y <= 2090 {
		_d == (3, 2, 2, 3)[_y % 4]
	} else {
		0
	}
}

//今日が春分の日かどうかを返す
//1992〜2023年は4で割った余りが0-1なら20日、それ以外なら21日
//2024〜2055年は4で割った余りが0-2なら20日、それ以外なら21日
//2056〜2091年は無条件で20日
IsShunbun {
	_y = GETTIME[0]
	_m = GETTIME[1]
	_d = GETTIME[2]
	if _m != 3 {
		0
	} elseif 1992 <= _y && _y <= 2023 {
		_d == (20, 20, 21, 21)[_y % 4]
	} elseif 2024 <= _y && _y <= 2055 {
		_d == (20, 20, 20, 21)[_y % 4]
	} elseif 2056 <= _y && _y <= 2091 {
		_d == 20
	} else {
		0 //ない
	}
}

//今日が秋分の日かどうかを返す
//2012〜2043年は4で割った余りが0なら22日、それ以外なら23日
//2044〜2075年は4で割った余りが0-1なら22日、それ以外なら23日
//2076〜2099年は4で割った余りが0-2なら22日、それ以外なら23日
IsShubun {
	_y = GETTIME[0]
	_m = GETTIME[1]
	_d = GETTIME[2]
	if _m != 9 {
		0
	} elseif 2012 <= _y && _y <= 2043 {
		_d == (22, 23, 23, 23)[_y % 4]
	} elseif 2044 <= _y && _y <= 2075 {
		_d == (22, 22, 23, 23)[_y % 4]
	} elseif 2076 <= _y && _y <= 2099 {
		_d == (22, 23, 23, 23)[_y % 4]
	} else {
		0 //ない
	}
}

//第○月曜日か調べる
IsMondayOfNthWeek {
	_nth_week = _argv[0];
	_d = GETTIME[2]
	_w = GETTIME[3]
	((_nth_week-1) * 7 + 1 <= _d) && (_d <= _nth_week * 7) && (_w == 1)

}


//2021.07.03 更新
//参考: ttps://ja.wikipedia.org/wiki/%E5%9B%BD%E6%B0%91%E3%81%AE%E7%A5%9D%E6%97%A5
GetJapanEvent {
	_event = ''
	_y = GETTIME[0]
	_m = GETTIME[1]
	_d = GETTIME[2]
	_w = GETTIME[3]
	if _m == 1 {
		if _d == 1 {
			_event = '元日'
		} elseif IsMondayOfNthWeek(2) {
			_event = '成人の日'
		}
	} elseif _m == 2 {
		if IsSetsubun {
			_event = '節分'
		} elseif _d == 11 {
			_event = '建国記念の日'
		} elseif _d == 14 {
			_event = 'バレンタインデー'
		} elseif _d == 23 {
			_event = '天皇誕生日'
		}
	} elseif _m == 3 {
		if _d == 3 {
			_event = '桃の節句'
		} elseif _d == 14 {
			_event = 'ホワイトデー'
		} elseif IsShunbun {
			_event = '春分の日'
		}
	} elseif _m == 4 {
		if _d == 1 {
			_event = 'エイプリルフール'
		} elseif _d == 29 {
			_event = '昭和の日'
		}
	} elseif _m == 5 {
		if _d == 3 {
			_event = '憲法記念日'
		} elseif _d == 4 {
			_event = 'みどりの日'
		} elseif _d == 5 {
			_event = 'こどもの日'
		}
	} elseif _m == 6 {
		//
		// 特になし
		//
	} elseif _m == 7 {
		if _d == 7 {
			_event = '七夕'
		} elseif IsMondayOfNthWeek(3) {
			_event = '海の日'
		}
	} elseif _m == 8 {
		if _d == 11 {
			_event = '山の日'
		}
	} elseif _m == 9 {
		if IsMondayOfNthWeek(3) {
			_event = '敬老の日'
		} elseif IsShubun {
			_event = '秋分の日'
		}
	} elseif _m == 10 {
		if IsMondayOfNthWeek(2) {
			_event = 'スポーツの日'
		} elseif _d == 31 {
			_event = 'ハロウィン'
		}
	} elseif _m == 11 {
		if _d == 3 {
			_event = '文化の日'
		} elseif _d == 23 {
			_event = '勤労感謝の日'
		}
	} elseif _m == 12 {
		if _d == 24 {
			_event = 'クリスマスイブ'
		} elseif _d == 25 {
			_event = 'クリスマス'
		} elseif _d == 31 {
			_event = '大晦日'
		}
	}
	_event
}

GetBootGreeting
{
	_h = GETTIME[4]
	if _h >= 5 && _h <= 6
	{
		'おはようございます'
	}
	elseif _h >= 7 && _h <= 9
	{
		'おはようございます'
	}
	elseif _h >= 10 && _h <= 11
	{
		'こんにちは'
		'お元気ですか'
	}
	elseif _h >= 12 && _h <= 13
	{
		'こんにちは'
		'お元気ですか'
	}
	elseif _h >= 14 && _h <= 15
	{
		'どうも'
	}
	elseif _h >= 16 && _h <= 18
	{
		'今日も1日お疲れさまです'
	}
	elseif _h >= 19 && _h <= 23
	{
		'こんばんは'
	}
	else
	{
		'こんばんは'
		'夜遅くまでおつかれさまです'
	}
}



// # -----------------------------------------------------------------
// # 右クリックメニューの文字列


#define	[C1]	%(CHR(1))
#define	[C2]	%(CHR(2))


// SAKURA側おすすめサイト
recommendrootbutton.caption
{
	'存在の底にみえるもの(&R)'
}

sakura.recommendsites
{
	_now = GETTIME
	"/
	nu（作者ウェブサイト）/
	[C1]http://nu.skr.jp/[C2]/
	"
}

kero.recommendsites
{
	"/
	長崎/
	[C1]https://www.youtube.com/watch?v=hNpk_gjOQwg[C2]/
	渋谷（東京）/
	[C1]https://www.youtube.com/channel/UCgdHxnHSXvcAi4PaMIY1Ltg[C2]/
	ニューヨーク/
	[C1]https://www.earthcam.com/cams/newyork/timessquare/?cam=tstwo_hd[C2]/

	-[C2]/

	うさださくら/
	[C1]http://usada.sakura.vg/[C2]/

	"
}

// ポータルサイト
portalrootbutton.caption
{
	'伺か関連サイト(&P)'
}

sakura.portalsites
{
	"/
	Disc-2[C1]http://disc2.s56.xrea.com/[C2]/
	GHOST TOWN[C1]http://ghosttown.mikage.jp/[C2]/
	"
}

vanishbutton.visible { 1 }

updatebutton.visible { 1 }

updatebutton.caption {
	'明日を占ってみる(&U)'
}



// # -----------------------------------------------------------------
// # 通知される文字列(NOTIFY)


// [CS]ベースウェアの情報を通知
// R0 バージョン番号　R1 本体の識別
basewareversion {
	BasewareData[1] = R[0]
}

// IDを通知
// R0 ID
uniqueid {
	Uniqueid = R[0]
}

// ウィンドウハンドルを通知
// R0 立ち絵のハンドル(\0[バイト値1]\1)
// R1 バルーンのハンドル(\0[バイト値1]\1)
hwnd {
	_i = R[0]
	_j = R[1]
	Sakura_hwnd = IARRAY
	Kero_hwnd = IARRAY

	Sakura_hwnd ,= TOINT(_i[0,CHR(1)])
	Kero_hwnd ,= TOINT(_i[0,CHR(1)])

	Sakura_hwnd ,= TOINT(_j[0,CHR(1)])
	Kero_hwnd ,= TOINT(_j[0,CHR(1)])
}

// [CS]インストールされているゴーストを通知
// R0 ゴースト名(バイト値1でセパレート)
installedghostname {
	// 別のタイミングで取得
}


// 自分以外に立っているゴーストを通知
// R0 ゴースト名(バイト値1でセパレート)
otherghostname {
	_array=IARRAY
	_array=R
	TmpGVList,='MaterializedGhostList'
	MaterializedGhostList = IARRAY
	foreach _array;_each
	{
		MaterializedGhostList ,= _each[0,CHR(1)]
	}
}



// # -----------------------------------------------------------------
// # 送信される文字列

name { 'AYA' }
version {
	// 一見必要ないように見えるけれど
	// というかまあ必要ないのだけれど
	_i = GETSETTING(0)
	if ! _i || _i=='' { '5' }
	else { _i }
}

craftman { 'umeici' }
craftmanw { '梅市' }
homeurl { 'http://nu.skr.jp/update/hotaru_hpns/' }


// SSTPを使用できるアプリケーションから送信されるスクリプトに
// よく用いられる変数の補完
// 辞書内でも用いる

username{DataArray[4]}
username2{DataArray[5]}
year{GETTIME[0]}
month{GETTIME[1]}
day{GETTIME[2]}
hour{GETTIME[4]}
minute{GETTIME[5]}
second{GETTIME[6]}
